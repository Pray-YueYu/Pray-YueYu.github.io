<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Pray-YueYu.github.io</id>
    <title>月雩の窝</title>
    <updated>2020-08-26T17:27:01.885Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Pray-YueYu.github.io"/>
    <link rel="self" href="https://Pray-YueYu.github.io/atom.xml"/>
    <subtitle>月雩梦，薇嫮影</subtitle>
    <logo>https://Pray-YueYu.github.io/images/avatar.png</logo>
    <icon>https://Pray-YueYu.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 月雩の窝</rights>
    <entry>
        <title type="html"><![CDATA[洛谷：P2713「罗马游戏」]]></title>
        <id>https://Pray-YueYu.github.io/post/luo-gu-p2713luo-ma-you-xi/</id>
        <link href="https://Pray-YueYu.github.io/post/luo-gu-p2713luo-ma-you-xi/">
        </link>
        <updated>2020-08-26T17:14:36.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2713">[传送门]</a></p>
<p><strong>星影落九天，鱼雁舞千弦。但为君沉吟，落日天涯圆。</strong></p>
<h3 id="题目描述">题目描述</h3>
<p>罗马皇帝很喜欢玩杀人游戏。 他的军队里面有n个人，每个人都是一个独立的团。最近举行了一次平面几何测试，每个人都得到了一个分数。 皇帝很喜欢平面几何，他对那些得分很低的人嗤之以鼻。他决定玩这样一个游戏。 它可以发两种命令：</p>
<p>Merger(i, j)。把i所在的团和j所在的团合并成一个团。如果i, j有一个人是死人，那么就忽略该命令。</p>
<p>Kill(i)。把i所在的团里面得分最低的人杀死。如果i这个人已经死了，这条命令就忽略。</p>
<p>皇帝希望他每发布一条kill命令，下面的将军就把被杀的人的分数报上来。（如果这条命令被忽略，那么就报0分）</p>
<h3 id="输入格式">输入格式</h3>
<p>第一行一个整数n（1&lt;=n&lt;=1000000）。n表示士兵数，m表示总命令数。</p>
<p>第二行n个整数，其中第i个数表示编号为i的士兵的分数。（分数都是[0..10000]之间的整数）</p>
<p>第三行一个整数m(1&lt;=m&lt;=100000) 第3+i行描述第i条命令。命令为如下两种形式：1. M i j  2. K i</p>
<p>输出格式<br>
如果命令是Kill，对应的请输出被杀人的分数。（如果这个人不存在，就输出0）</p>
<h3 id="输入输出样例">输入输出样例</h3>
<h4 id="样例输入">样例输入</h4>
<pre><code>5
100 90 66 99 10
7
M 1 5
K 1
K 1
M 2 3
M 3 4
K 5
K 4
</code></pre>
<h4 id="样例输出">样例输出</h4>
<pre><code>10
100
0
66
</code></pre>
<hr>
<h3 id="这是左偏树经典题目"><s><strong>这是左偏树经典题目</strong></s></h3>
<h3 id="但为什么大佬们都用左偏树啊-平板电视-它-不-香-吗"><strong><s>但为什么大佬们都用左偏树啊 平板电视 它 不 香 吗</s></strong></h3>
<h4 id="其实我不会左偏树"><s><strong>其实我不会左偏树（</strong></s></h4>
<p><strong>不过话说这皇帝好残暴啊</strong></p>
<hr>
<p>对于q[i] (队列)：q[i].first保存的是i的编号，q[i].second保存的是i的数值</p>
<p>对于vis[i]：判断编号为i的人是否被杀</p>
<p>对于Fa[i]：编号为i的人的集合中数值最小的人的编号（就是i的father）</p>
<hr>
<p>对于每次操作：</p>
<p>①若操作为'M'，先将i与j各自的father求出来</p>
<p>若编号为i或j的人已died或者i,j已在同一集合，则跳过此回合</p>
<p>反之就将i,j两个集合 合并</p>
<p>②若操作为'K'，</p>
<p>若编号为i的人已去世，则跳过此回合</p>
<p>反之输出i所在集合father的值，并令它的vis为true（即已使用过）</p>
<p>最后将它（指i的father）弹出队列</p>
<h2 id="code为各位大佬献上我丑陋的代码~">Code：（为各位大佬献上我丑陋的代码~）</h2>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
#define ll long long
#include &lt;ext/pb_ds/priority_queue.hpp&gt;//要使用pbds队列就要加这个头文件
using namespace std;
const int N=1000010;
int Fa[N],n,m,vis[N];
ll read()
{
	ll x=0,f=1;char ch=getchar();
	while(ch&lt;'0'||ch&gt;'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch&gt;='0'&amp;&amp;ch&lt;='9'){x=x*10+ch-'0';ch=getchar();}
	return x*f;
}//没有丝毫作用的快读~
struct cmp
{
    bool operator()(pair&lt;int,int&gt;a,pair&lt;int,int&gt;b)
	{
        if(a.second == b.second)
			return a.first &gt; b.first;
        return a.second &gt; b.second;
    }
};//队列自动从小到大排序
int Get_F(int x){return Fa[x]==x?x:Fa[x]=Get_F(Fa[x]);}//并查集，路径压缩
__gnu_pbds::priority_queue &lt;pair&lt;int,int&gt;,cmp&gt; q[N];//前面的p__gnu_pbds::不能省！
int main()
{
	//freopen(&quot;.in&quot;,&quot;r&quot;,stdin);
	//freopen(&quot;.out&quot;,&quot;w&quot;,stdout);
	n=read();
	for(int i=1;i&lt;=n;i++)
	{
		int x=read();
		Fa[i]=i;
		q[i].push(make_pair(i,x));//第一个数是编号，第二个是值
	}//输入~
	int m=read();
	for(int i=1;i&lt;=m;i++)
	{
		char ch[10];int x,y;
		scanf(&quot;%s&quot;,ch);
		if(ch[0]=='M')
		{
			x=read(),y=read();
			int x_0=Get_F(x),y_0=Get_F(y);//得到father
			if(vis[x]||vis[y]||x_0==y_0)continue;//判断是否可行
			q[x_0].join(q[y_0]);//将队列q[y_0]中所有值都加入q[x_0]，并且会清空q[y_0]！
			Fa[y_0]=x_0;
		}//合并
		else
		{
			x=read();int x_0=Get_F(x);//得到father
			if(vis[x]){printf(&quot;0\n&quot;);continue;}//判断是否可行
			printf(&quot;%d\n&quot;,q[x_0].top().second);//输出
			vis[q[x_0].top().first]=true;//将被输出的人标记一下
			q[x_0].pop();//弹出
		}
	}
	return 0;	
} 
//**月雩·薇嫭**
</code></pre>
<h3 id="题外左偏树有什么用">题外：<s>左偏树有什么用</s></h3>
<h4 id="还有就是晚上肝题是真的爽">还有就是，<s>晚上肝题是真的爽</s></h4>
<h4 id="by月雩薇嫭-202085-016"><em><strong>by：月雩·薇嫭</strong></em> ,2020.8.5  0:16</h4>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[洛谷 P4014:「分配问题」]]></title>
        <id>https://Pray-YueYu.github.io/post/luo-gu-p4014fen-pei-wen-ti/</id>
        <link href="https://Pray-YueYu.github.io/post/luo-gu-p4014fen-pei-wen-ti/">
        </link>
        <updated>2020-08-26T17:06:56.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4014">题目链接</a></p>
<h3 id="题目描述">题目描述</h3>
<p>有n件工作要分配给n个人做.第i个人做第j件工作产生的效益为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>.试设计一个将n件工作分配给n个人做的分配方案,使产生的总效益最大.</p>
<h3 id="输入格式">输入格式</h3>
<p>文件的第1行有1个正整数n,表示有n件工作要分配给n个人做.<br>
接下来的n行中,每行有n个整数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>,表示第i个人做第j件工作产生的效益为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>.</p>
<h3 id="输出格式">输出格式</h3>
<p>两行分别输出最小总效益和最大总效益。</p>
<h3 id="输入输出样例">输入输出样例</h3>
<h4 id="样例输入">样例输入</h4>
<pre><code>5
2 2 2 1 2
2 3 1 2 4
2 0 1 1 1
2 3 4 3 3
3 2 1 2 1
</code></pre>
<h4 id="样例输出">样例输出</h4>
<pre><code>5
14
</code></pre>
<h3 id="说明提示">说明/提示</h3>
<p>1<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span>n<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo><mn>100</mn></mrow><annotation encoding="application/x-tex">\le100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span></span></span></span><br>
<strong>一个人只能修一个工件</strong></p>
<p>这是一道<strong>费用流经典题目</strong></p>
<h3 id="建图">建图</h3>
<ul>
<li><strong>1.<strong>设</strong>0</strong>为<strong>超级源点</strong>，<strong>2<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">×</span></span></span></span>n+1</strong>为<strong>超级汇点</strong>，第<strong>i</strong>个人的节点为<strong>i</strong>，第<strong>j</strong>件工作节点为<strong>j+n</strong></li>
<li><strong>2.<strong>从</strong>超级源点</strong> 向<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>i<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span>[1,n]连接一条容量为1，费用为0的边</li>
<li><strong>3.<strong>从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>j<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span>[n+1,2<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">×</span></span></span></span>n]向</strong>超级汇点</strong>连接一条容量为1，费用为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>的边</li>
<li><strong>4</strong>.从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>i<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span> [1, n]向<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span>j<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span> [n+1,n<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">×</span></span></span></span> 2]，连接一条容量为1，费用为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{i, j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的边</li>
</ul>
<h3 id="做法">做法</h3>
<p>跑一遍<strong>最小费用最大流</strong>&amp;<strong>最大费用最小流</strong>，然后再分别输出最<strong>小</strong>值与最<strong>大</strong>值<br>
(<strong>温馨提醒：一定要输出，不然会WA！</strong>)</p>
<p><strong>为各位大佬献上我丑陋的代码~</strong></p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
#define FQ(i,a,b) for(register int i=a;i&lt;=b;i++)
#define prf printf
#define scf scanf
#define ll long long
using namespace std;
const int N=5e4+10;
int INF,n,num=1,ne[N],fi[N],to[N],w[N],pl[N],S,T;
int dst[N],incf[N],P[N],vis[N],ans;
queue&lt;int&gt; q;
void FindMaxN()
{
	int fINDmAXn[1];
	memset(fINDmAXn,128/2,sizeof(fINDmAXn));	
	INF=fINDmAXn[0];
}
ll read()
{
	ll x=0,f=1;char ch=getchar();
	while(ch&lt;'0'||ch&gt;'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch&gt;='0'&amp;&amp;ch&lt;='9'){x=x*10+ch-'0';ch=getchar();}
	return x*f;	
}
void add(int x,int y,int z,int kl)
{
    ne[++num]=fi[x];    
    fi[x]=num;    
    to[num]=y;   
    w[num]=z;
    pl[num]=kl; 
}
bool spfa()
{ 
    for(int i=S;i&lt;=T;i++)dst[i]=INF; 
    memset(vis,0,sizeof(vis));  
    q.push(S),dst[S]=0;	
	incf[S]=1&lt;&lt;30,vis[S]=true;   
    while(!q.empty())
    {      
        int x=q.front();      
        vis[x]=false;q.pop();        
        for(int i=fi[x];i;i=ne[i])
        {            
            int ver=to[i];             
            if(dst[ver]&gt;dst[x]+pl[i]&amp;&amp;w[i])
            {                
                dst[ver]=dst[x]+pl[i];                
                incf[ver]=min(incf[x],w[i]);                
                P[ver]=i;                
                if(!vis[ver])vis[ver]=true,q.push(ver);                 
            }             
        }    
    }
    return dst[T]!=INF;  
}
void update()
{	
	int x=T;     
    while(x!=S)
    {         
        int i=P[x];         
        w[i]-=incf[T];       
        w[i^1]+=incf[T];
   
        x=to[i^1];
    }
    ans+=dst[T]*incf[T];
}
bool spfa_d()
{
    for(int i=S;i&lt;=T;i++)dst[i]=-INF;
    q.push(S),dst[S]=0;incf[S]=1&lt;&lt;30;
    while(!q.empty())
    {
        int x=q.front();
        vis[x]=false;q.pop();
        for(int i=fi[x];i;i=ne[i])
        {
            int ver=to[i];
            if(dst[ver]&lt;dst[x]+pl[i]&amp;&amp;w[i])
            {
                dst[ver]=dst[x]+pl[i];
                incf[ver]=min(incf[x],w[i]);
                P[ver]=i;
                if(!vis[ver])vis[ver]=true,q.push(ver);
            }
        }
    }
    return dst[T]!=-INF;
}
void update_d()
{
	int x=T;
    while(x!=S)
    {
        int i=P[x];
        w[i]-=incf[T];
        w[i^1]+=incf[T];
        x=to[i^1];
    }
    ans+=dst[T]*incf[T];
}
void add_x(int x,int y,int z,int kl)
{
	add(x,y,z,kl);
	add(y,x,0,-kl);
}
int main()
{
	//freopen(&quot;.in&quot;,&quot;r&quot;,stdin);
	//freopen(&quot;.out&quot;,&quot;w&quot;,stdout);
	FindMaxN();
	n=read();S=0,T=n*2+1;
	for(int i=1;i&lt;=n;i++)
	{
		for(int j=1;j&lt;=n;j++)
		{
			int x=read();
			add_x(i,j+n,1,x);
		}
	}
	for(int i=1;i&lt;=n;i++)add_x(S,i,1,0),add_x(i+n,T,1,0);
	while(spfa())update();
	printf(&quot;%d\n&quot;,ans);
	ans=0;
	for(int i=2;i&lt;=num;i+=2)w[i]+=w[i^1],w[i^1]=0;
	while(spfa_d())update_d();
	printf(&quot;%d\n&quot;,ans);
	return 0;		
}
//**月雩·薇嫭**
</code></pre>
<h3 id="by月雩薇嫭"><em><strong>by：月雩·薇嫭</strong></em></h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[人生第一首诗-思尝]]></title>
        <id>https://Pray-YueYu.github.io/post/ren-sheng-di-yi-shou-shi-si-chang/</id>
        <link href="https://Pray-YueYu.github.io/post/ren-sheng-di-yi-shou-shi-si-chang/">
        </link>
        <updated>2020-08-26T16:16:23.000Z</updated>
        <content type="html"><![CDATA[<p>往事已去却芬芳，思尝只悲无法回。<br>
杨花拂面菊花香，风华正茂却沧桑。<br>
(好菜<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mi>a</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">qaq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>)<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>i</mi><mi>m</mi><mi>e</mi><mo>:</mo><mn>2017</mn></mrow><annotation encoding="application/x-tex">time: 2017</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">1</span><span class="mord">7</span></span></span></span>年</p>
]]></content>
    </entry>
</feed>